// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/ouroboros.proto

package ouroboros_kv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KvDataHashProto represents the metadata for stored data with chunk hashes
type KvDataHashProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                    // Key of the content (hash.Hash as bytes)
	ChunkHashes [][]byte `protobuf:"bytes,2,rep,name=chunk_hashes,json=chunkHashes,proto3" json:"chunk_hashes,omitempty"` // Hashes of KvDataShards
	Parent      []byte   `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`                              // Key of the parent chunk
	Created     int64    `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`                           // Unix timestamp when the data was created
	Aliases     [][]byte `protobuf:"bytes,5,rep,name=aliases,proto3" json:"aliases,omitempty"`                            // Aliases for the data
}

func (x *KvDataHashProto) Reset() {
	*x = KvDataHashProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ouroboros_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvDataHashProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvDataHashProto) ProtoMessage() {}

func (x *KvDataHashProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ouroboros_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvDataHashProto.ProtoReflect.Descriptor instead.
func (*KvDataHashProto) Descriptor() ([]byte, []int) {
	return file_proto_ouroboros_proto_rawDescGZIP(), []int{0}
}

func (x *KvDataHashProto) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KvDataHashProto) GetChunkHashes() [][]byte {
	if x != nil {
		return x.ChunkHashes
	}
	return nil
}

func (x *KvDataHashProto) GetParent() []byte {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *KvDataHashProto) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *KvDataHashProto) GetAliases() [][]byte {
	if x != nil {
		return x.Aliases
	}
	return nil
}

// KvDataShardProto represents a chunk of content that will be stored in the key-value store
type KvDataShardProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkHash               []byte `protobuf:"bytes,1,opt,name=chunk_hash,json=chunkHash,proto3" json:"chunk_hash,omitempty"`                                                // After chunking and before compression, encryption and erasure coding
	EncodedHash             []byte `protobuf:"bytes,2,opt,name=encoded_hash,json=encodedHash,proto3" json:"encoded_hash,omitempty"`                                          // After compression, encryption and erasure, including all the metadata
	ReedSolomonShards       uint32 `protobuf:"varint,3,opt,name=reed_solomon_shards,json=reedSolomonShards,proto3" json:"reed_solomon_shards,omitempty"`                     // Number of shards in Reed-Solomon coding
	ReedSolomonParityShards uint32 `protobuf:"varint,4,opt,name=reed_solomon_parity_shards,json=reedSolomonParityShards,proto3" json:"reed_solomon_parity_shards,omitempty"` // Number of parity shards in Reed-Solomon coding
	ReedSolomonIndex        uint32 `protobuf:"varint,5,opt,name=reed_solomon_index,json=reedSolomonIndex,proto3" json:"reed_solomon_index,omitempty"`                        // Index of the chunk in the Reed-Solomon coding
	Size                    uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`                                                                          // Size of the shard in bytes
	OriginalSize            uint64 `protobuf:"varint,7,opt,name=original_size,json=originalSize,proto3" json:"original_size,omitempty"`                                      // Size of the original encrypted chunk before Reed-Solomon encoding
	EncapsulatedKey         []byte `protobuf:"bytes,8,opt,name=encapsulated_key,json=encapsulatedKey,proto3" json:"encapsulated_key,omitempty"`                              // ML-KEM encapsulated secret for the chunk
	Nonce                   []byte `protobuf:"bytes,9,opt,name=nonce,proto3" json:"nonce,omitempty"`                                                                         // AES-GCM nonce for encryption
	ChunkContent            []byte `protobuf:"bytes,10,opt,name=chunk_content,json=chunkContent,proto3" json:"chunk_content,omitempty"`                                      // Content of the chunk after compression, encryption and erasure coding
}

func (x *KvDataShardProto) Reset() {
	*x = KvDataShardProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ouroboros_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvDataShardProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvDataShardProto) ProtoMessage() {}

func (x *KvDataShardProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ouroboros_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvDataShardProto.ProtoReflect.Descriptor instead.
func (*KvDataShardProto) Descriptor() ([]byte, []int) {
	return file_proto_ouroboros_proto_rawDescGZIP(), []int{1}
}

func (x *KvDataShardProto) GetChunkHash() []byte {
	if x != nil {
		return x.ChunkHash
	}
	return nil
}

func (x *KvDataShardProto) GetEncodedHash() []byte {
	if x != nil {
		return x.EncodedHash
	}
	return nil
}

func (x *KvDataShardProto) GetReedSolomonShards() uint32 {
	if x != nil {
		return x.ReedSolomonShards
	}
	return 0
}

func (x *KvDataShardProto) GetReedSolomonParityShards() uint32 {
	if x != nil {
		return x.ReedSolomonParityShards
	}
	return 0
}

func (x *KvDataShardProto) GetReedSolomonIndex() uint32 {
	if x != nil {
		return x.ReedSolomonIndex
	}
	return 0
}

func (x *KvDataShardProto) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *KvDataShardProto) GetOriginalSize() uint64 {
	if x != nil {
		return x.OriginalSize
	}
	return 0
}

func (x *KvDataShardProto) GetEncapsulatedKey() []byte {
	if x != nil {
		return x.EncapsulatedKey
	}
	return nil
}

func (x *KvDataShardProto) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *KvDataShardProto) GetChunkContent() []byte {
	if x != nil {
		return x.ChunkContent
	}
	return nil
}

var File_proto_ouroboros_proto protoreflect.FileDescriptor

var file_proto_ouroboros_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x72, 0x6f, 0x62, 0x6f, 0x72, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x75, 0x72, 0x6f, 0x62, 0x6f, 0x72,
	0x6f, 0x73, 0x6b, 0x76, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x4b, 0x76, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x8e, 0x03, 0x0a, 0x10, 0x4b, 0x76,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x6f, 0x6e,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72,
	0x65, 0x65, 0x64, 0x53, 0x6f, 0x6c, 0x6f, 0x6d, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x72, 0x65, 0x65, 0x64, 0x53, 0x6f, 0x6c, 0x6f, 0x6d, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x65, 0x64, 0x53,
	0x6f, 0x6c, 0x6f, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x35, 0x68, 0x65, 0x75, 0x2f, 0x6f,
	0x75, 0x72, 0x6f, 0x62, 0x6f, 0x72, 0x6f, 0x73, 0x2d, 0x6b, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_ouroboros_proto_rawDescOnce sync.Once
	file_proto_ouroboros_proto_rawDescData = file_proto_ouroboros_proto_rawDesc
)

func file_proto_ouroboros_proto_rawDescGZIP() []byte {
	file_proto_ouroboros_proto_rawDescOnce.Do(func() {
		file_proto_ouroboros_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ouroboros_proto_rawDescData)
	})
	return file_proto_ouroboros_proto_rawDescData
}

var file_proto_ouroboros_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_ouroboros_proto_goTypes = []interface{}{
	(*KvDataHashProto)(nil),  // 0: ouroboroskv.KvDataHashProto
	(*KvDataShardProto)(nil), // 1: ouroboroskv.KvDataShardProto
}
var file_proto_ouroboros_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ouroboros_proto_init() }
func file_proto_ouroboros_proto_init() {
	if File_proto_ouroboros_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ouroboros_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvDataHashProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ouroboros_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvDataShardProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ouroboros_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ouroboros_proto_goTypes,
		DependencyIndexes: file_proto_ouroboros_proto_depIdxs,
		MessageInfos:      file_proto_ouroboros_proto_msgTypes,
	}.Build()
	File_proto_ouroboros_proto = out.File
	file_proto_ouroboros_proto_rawDesc = nil
	file_proto_ouroboros_proto_goTypes = nil
	file_proto_ouroboros_proto_depIdxs = nil
}
